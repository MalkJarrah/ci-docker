name: CI - Test, Coverage, Docker Build & Run

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    name: Run Tests & Coverage
    runs-on: ubuntu-latest


    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run tests with coverage
        run: pytest --cov=app

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: ./coverage.xml

  docker:
    name: Docker Login, Build & Test Container
    runs-on: ubuntu-latest
    needs: test  

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}


      - name: Build Docker image
        run: docker build -t flask-ci-docker .

      - name: Tag Docker image
        run: docker tag flask-ci-docker malkghassan/flask-ci-docker:latest
        
      - name: Push Docker image to Docker Hub
        run: docker push malkghassan/flask-ci-docker:latest
        
      - name: Run Docker container in background
        run: docker run -d -p 5000:5000 --name flask-ci-docker-container flask-ci-docker

      - name: Wait for container to be ready
        run: |
          for i in {1..10}; do
            if curl -s http://localhost:5000; then
              echo "Container is ready"
              break
            fi
            echo "Waiting for container..."
            sleep 3
          done

      - name: Verify container response
        run: curl -v http://localhost:5000

      - name: Show container logs 
        run: docker logs flask-ci-docker-container

      - name: Stop and remove container
        run: docker rm -f flask-ci-docker-container

